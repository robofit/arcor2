[GLOBAL]
pants_version = "2.16.0a0"  # in order to get newer pex (https://github.com/pantsbuild/pex/pull/2002)
colors = true
process_execution_local_parallelism = 4

plugins = [
  "packaging==21.3",
]

backend_packages.add = [
  "pants.backend.python",
  "pants.backend.python.lint.black",
  "pants.backend.python.lint.flake8",
  "pants.backend.python.typecheck.mypy",
  "pants.backend.python.lint.isort",
  "pants.backend.python.lint.docformatter",
  "setup_kwargs_plugin",
  "pants.backend.docker",
  "pants.backend.docker.lint.hadolint",
  "pants.backend.shell",
  "pants.backend.shell.lint.shfmt",
  "pants.backend.shell.lint.shellcheck",
]

build_file_prelude_globs = [
  "pants-plugins/macros.py",
]

pythonpath = ["%(buildroot)s/pants-plugins"]

[source]
root_patterns = [
  '/src/python',
  '/3rdparty'  # not sure why, but all 3rdparty deps depends on requirements.txt (see ./pants dependees 3rdparty/requirements.txt)
]

[python]
interpreter_constraints = ["==3.10.*"]
enable_resolves = true

[python.resolves]
python-default = "3rdparty/constraints.txt"

[python-bootstrap]
search_path = ["<PATH>", "/usr/bin/python3.10"]

[black]
interpreter_constraints = ["==3.10.*"]
version = "black==23.1.0"
lockfile = "3rdparty/black_lockfile.txt"

[flake8]
version = "flake8==6.0.0"
extra_requirements.add = [
  "flake8-tidy-imports",
  "flake8-annotations-coverage",
  "flake8-pytest-style",
  "flake8-bugbear",
  "flake8-pantsbuild",
#  "flake8-new-union-types",  TODO enable when https://github.com/s-knibbs/dataclasses-jsonschema/issues/195 is solved
  "flake8-absolute-import",
  "vulture"
]
lockfile = "3rdparty/flake8_lockfile.txt"


[mypy]
version = "mypy==1.1.1"
interpreter_constraints = ["==3.10.*"]
extra_requirements.add = [
  "numpy"
]
extra_type_stubs = ["types-PyYAML==6.0.12.8", "types-aiofiles==23.1.0.0", "types-orjson==3.6.2", "types-python-dateutil==2.8.19.10", "types-requests==2.28.11.16",  "types-setuptools==65.7.0.2", "pydub-stubs==0.25.1"]
lockfile = "3rdparty/mypy_lockfile.txt"

[pytest]
version = "pytest==7.2.2"
extra_requirements.add = [
  "pytest-repeat",
  "pytest-randomly",
  "pytest-icdiff",
  "pygments",
  "pytest-asyncio"
]
lockfile = "3rdparty/pytest_lockfile.txt"

# args = ["--count=3 -x"]

[test]
use_coverage = false
extra_env_vars = ["PYTHONDEVMODE=1"]  # "PYTHONWARNINGS=error" not useable due to DeprecationWarning in networkx-2.2
timeout_default = 600

[python-infer]
imports = true

[setup-py-generation]
first_party_dependency_version_scheme = "compatible"

[anonymous-telemetry]
enabled = true
repo_id = "394a3b7c-1c30-4047-b53e-90e5df3d84a9"
