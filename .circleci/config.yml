# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.8.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      ARCOR2_PROJECT_PATH: /tmp/arcor2_project

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: prepare environment
          command: |
            mkdir -p ${ARCOR2_PROJECT_PATH}

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            sudo apt-get update
            sudo apt-get install build-essential git
            pip install --upgrade pip setuptools
            pip install -e .[test]
            pip install pytest flake8 mypy flake8-import-order flake8-tidy-imports flake8-annotations-coverage flake8-pytest-style flake8-bugbear
            cd ..
            git clone https://github.com/ZdenekM/dataclasses-jsonschema
            cd dataclasses-jsonschema
            git checkout issue-126
            pip install -e .


      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: check style
          command: |
            . venv/bin/activate
            flake8 arcor2

      - run:
          name: check typing
          command: |
            . venv/bin/activate
            mypy arcor2

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            py.test -m "not integration" --docker-compose arcor2/docker arcor2

      - store_artifacts:
          path: test-reports
          destination: test-reports
